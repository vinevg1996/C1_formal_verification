let processC(skC:skey, pkC:pkey, pkS:pkey, hk:hash_key) =
  in(c1, ());
  new clnt_rc:nonce;
  let clnt_m1 = Mess1(clnt_rc) in
  out(c2, clnt_m1);

  in(c3, (clnt_m2:mess2_t, clnt_m3:mess3_t, clnt_m4:mess4_t));
  let Mess2(clnt_rs:nonce) = clnt_m2 in
  let Mess3(clnt_serv_cert:pkey) = clnt_m3 in
  let Mess4(clnt_TS:G, clnt_serv_sign:serv_signature) = clnt_m4 in
  let clnt_mess_for_serv_sign = concat_for_serv_sign(clnt_rc, clnt_rs, clnt_TS) in
  if serv_verify(clnt_mess_for_serv_sign, pkS, clnt_serv_sign) then
    new clnt_tC:Z;
    let clnt_TC = exp(g,clnt_tC) in
    let clnt_clnt_cert = pkC in
    let clnt_m7 = Mess7(clnt_clnt_cert) in
    let clnt_m8 = Mess8(clnt_TC) in
    let clnt_mess_for_clnt_sign = concat_for_clnt_sign(clnt_m1, clnt_m2, clnt_m3,
                                                       clnt_m4, clnt_m7, clnt_m8) in
    let clnt_clnt_sig = clnt_sign(clnt_mess_for_clnt_sign, skC) in
    let clnt_pms = exp(clnt_TS, clnt_tC) in
    let clnt_ms_in = concat_for_ms(clnt_rc, clnt_rs) in
    let clnt_ms = PRF_ms(clnt_pms, clnt_ms_in) in
    let clnt_common_key_in = concat_for_common_key(clnt_rc, clnt_rs) in
    let clnt_common_key:four_keys = PRF_common_key(clnt_ms, clnt_common_key_in) in
    let tuple4keys(clnt_clnt_fin_enc_key:fin_key,
                   clnt_serv_fin_enc_key:fin_key,
                   clnt_clnt_enc_key:enc_key,
                   clnt_serv_enc_key:enc_key) = split4(clnt_common_key) in
    let clnt_m9 = Mess9(clnt_clnt_sig) in
    let clnt_mess_for_clnt_fin = concat_for_clnt_fin(clnt_m1, clnt_m2, clnt_m3,
                                                     clnt_m4, clnt_m7, clnt_m8,
                                                     clnt_m9) in
    let clnt_hash_for_clnt_fin = hash_clnt(hk, clnt_mess_for_clnt_fin) in
    let clnt_clnt_fin = clnt_fin(clnt_hash_for_clnt_fin, clnt_ms) in

    let clnt_enc_clnt_fin = enc_clnt_fin(clnt_clnt_fin, clnt_clnt_fin_enc_key) in
    let clnt_m11 = Mess11(clnt_enc_clnt_fin) in
    out(c4, (clnt_m7, clnt_m8, clnt_m9, clnt_m11));

    in(c5, clnt_m13:mess13_t);
    let Mess13(clnt_enc_serv_fin:enc_serv_fin_t) = clnt_m13 in
    let serv_injbot(clnt_serv_fin) = dec_serv_fin(clnt_enc_serv_fin, clnt_serv_fin_enc_key) in

    let clnt_mess_for_serv_fin = concat_for_serv_fin(clnt_m1, clnt_m2, clnt_m3,
                                                     clnt_m4, clnt_m7, clnt_m8,
                                                     clnt_m9, clnt_clnt_fin) in
    let clnt_hash_for_serv_fin = hash_serv(hk, clnt_mess_for_serv_fin) in
    if serv_fin(clnt_hash_for_serv_fin, clnt_ms) = clnt_serv_fin then
    (
      event Client_Accept;
      out(c6, ());

      (* Encrypt() oracle *)
      in(c7, ());
      new clnt_rand_bit:bit_t;
      let enc_clnt_rand_bit = enc_bit(clnt_rand_bit, clnt_clnt_enc_key) in
      out(c8, enc_clnt_rand_bit)

    )
    else
    (
      event Client_Reject;
      out(c6, ())
    ).
